// <auto-generated />
using System;
using Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240813004503_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Entities.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Core.Domain.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Core.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506347/beqaltk/cat/b7vpup6kh8dfeazb0ycq.png",
                            Name = "Vegetables and fruits"
                        },
                        new
                        {
                            Id = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506341/beqaltk/cat/eb6jaykdv8hxul9oamjv.png",
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = new Guid("f4b80fb3-6482-4d08-9044-2fd31bc9e5ae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506348/beqaltk/cat/osmc52awqxuedocnttuc.png",
                            Name = "Chicken, meat and fish"
                        },
                        new
                        {
                            Id = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506339/beqaltk/cat/mfs9lgw0vthr7akl9aop.png",
                            Name = "Cold drinks and ice cream"
                        },
                        new
                        {
                            Id = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506341/beqaltk/cat/zq3gagl2qx5nwc1zgvqi.png",
                            Name = "Home care"
                        },
                        new
                        {
                            Id = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506345/beqaltk/cat/jdacpvr7owpsjbc0akrz.png",
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = new Guid("a1be8b20-1226-4833-bb59-40cb6490f785"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506342/beqaltk/cat/jvxr5ft2npvbaa5gwxyc.png",
                            Name = "Rice, atta and dal"
                        },
                        new
                        {
                            Id = new Guid("87b5e568-4339-4c24-bb91-f315043783da"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506343/beqaltk/cat/xzv5ld9jq7as0dijuarp.png",
                            Name = "Frozen food"
                        },
                        new
                        {
                            Id = new Guid("c3e2e423-2612-4f07-9822-826016e78fae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723506341/beqaltk/cat/k7wb8mmvv0lvns47s5iu.png",
                            Name = "Tea and coffee"
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.ExpiredToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpiredTokens");
                });

            modelBuilder.Entity("Core.Domain.Entities.FavouritesList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("FavouritesLists");
                });

            modelBuilder.Entity("Core.Domain.Entities.FavouritesListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FavouritesListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FavouritesListId");

                    b.HasIndex("ProductId");

                    b.ToTable("FavouritesListItems");
                });

            modelBuilder.Entity("Core.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Core.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfRatings")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff7fa7f6-4e9a-4663-9871-8688290e9d1e"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507529/beqaltk/pro/ofzup4cp7ijj7p62rapo.png",
                            Name = "Tomato",
                            NumberOfRatings = 0,
                            Price = 15.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("e90ccbf2-23e9-4e3d-b8d4-d9a94b92475d"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507521/beqaltk/pro/dhxrorcpfip5o9nzu2ia.png",
                            Name = "Grapes",
                            NumberOfRatings = 0,
                            Price = 20.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("2cb96f3a-a209-4b63-a14a-268cff88a807"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507515/beqaltk/pro/qowzecgx7wispwpvgz5a.png",
                            Name = "Chillies",
                            NumberOfRatings = 0,
                            Price = 28.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("9cf1e270-0ece-4dc3-88bb-84bd3d4f1ae6"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507500/beqaltk/pro/ys2i3tcherm5oeon5tjv.jpg",
                            Name = "Orange",
                            NumberOfRatings = 0,
                            Price = 30.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("924cc07b-d12e-4e03-8c54-53b79eaa3e20"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507567/beqaltk/pro/rpdixsrmmwvev9icpnuv.png",
                            Name = "Potato",
                            NumberOfRatings = 0,
                            Price = 32.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("a95f5b02-6e70-4825-b4b1-b36ab8a51087"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507566/beqaltk/pro/udrypolhm0ybhtgo18kg.png",
                            Name = "Strawberry",
                            NumberOfRatings = 0,
                            Price = 46.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("0e4d2478-be8c-4c75-bab4-88a36824f802"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507514/beqaltk/pro/i1coja7pjlqhzmpmdy6u.png",
                            Name = "Apple",
                            NumberOfRatings = 0,
                            Price = 18.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("e525ff86-45fc-4820-8300-460ead3f780e"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507521/beqaltk/pro/tccorqv9duvzzl6bapm4.png",
                            Name = "Banana",
                            NumberOfRatings = 0,
                            Price = 55.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("d3221499-4a7c-4bc0-a95d-88a2c1de87fe"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507519/beqaltk/pro/mnz40gylcn13pbrbizbn.png",
                            Name = "Ginger",
                            NumberOfRatings = 0,
                            Price = 10.0,
                            Rating = 0,
                            Weight = "200 G"
                        },
                        new
                        {
                            Id = new Guid("f589f64e-a06b-48a6-aa14-c1d321672cf8"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507526/beqaltk/pro/lbvngfwsxqdlec0smpz9.jpg",
                            Name = "Bringal",
                            NumberOfRatings = 0,
                            Price = 34.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("35f8384f-5bc4-4c82-baa9-36048b536518"),
                            CategoryId = new Guid("4bcc9e22-5843-4d3c-9d5c-35a122eba0c8"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507534/beqaltk/pro/kbedbvvyu07sdcxl70ct.png",
                            Name = "Watermelon",
                            NumberOfRatings = 0,
                            Price = 50.0,
                            Rating = 0,
                            Weight = "2.5 KG"
                        },
                        new
                        {
                            Id = new Guid("8989a4de-905f-4e67-949c-be4fb458dab2"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507498/beqaltk/pro/iw4kke7kmklss7wbpfp7.png",
                            Name = "Tamil Milk",
                            NumberOfRatings = 0,
                            Price = 70.0,
                            Rating = 0,
                            Weight = "500 ML"
                        },
                        new
                        {
                            Id = new Guid("b3a06d48-cb1a-4f1f-89e4-e11c4d8f6b74"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507510/beqaltk/pro/zhmfngx3uyzuwotq1tn7.png",
                            Name = "Curd",
                            NumberOfRatings = 0,
                            Price = 54.0,
                            Rating = 0,
                            Weight = "500 ML"
                        },
                        new
                        {
                            Id = new Guid("b4efd5b5-1286-403e-bea1-f0fc9a58889e"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507524/beqaltk/pro/xepzbchg13erg3girrck.png",
                            Name = "Paneer",
                            NumberOfRatings = 0,
                            Price = 90.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("2e934ddf-3674-4352-9b9a-06e24fb7989f"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507499/beqaltk/pro/pzymqgooxbjjuptsqtpy.jpg",
                            Name = "Arokya Milk",
                            NumberOfRatings = 0,
                            Price = 37.0,
                            Rating = 0,
                            Weight = "1 L"
                        },
                        new
                        {
                            Id = new Guid("c75e2e80-efeb-46ca-bbba-edc9ceb49c83"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507498/beqaltk/pro/uje8z49nttz7y05qv5vr.png",
                            Name = "Amul Milk",
                            NumberOfRatings = 0,
                            Price = 60.0,
                            Rating = 0,
                            Weight = "1 L"
                        },
                        new
                        {
                            Id = new Guid("80c5025d-400d-4a67-ac75-003f8c74b08a"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507522/beqaltk/pro/xmptvgmstsazhfaq1zd7.jpg",
                            Name = "Alavin Milk",
                            NumberOfRatings = 0,
                            Price = 40.0,
                            Rating = 0,
                            Weight = "1 L"
                        },
                        new
                        {
                            Id = new Guid("237c29dd-4ab2-4c26-9b7e-e1a4a452beaa"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507508/beqaltk/pro/xt3l8sjzdnx8enxd80rw.png",
                            Name = "Ghee",
                            NumberOfRatings = 0,
                            Price = 70.0,
                            Rating = 0,
                            Weight = "500 ML"
                        },
                        new
                        {
                            Id = new Guid("be6701a3-17da-4035-8dee-fafef2952eb4"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507522/beqaltk/pro/ytnv11dfmzmelbzhxt6o.jpg",
                            Name = "Butter",
                            NumberOfRatings = 0,
                            Price = 50.0,
                            Rating = 0,
                            Weight = "250 G"
                        },
                        new
                        {
                            Id = new Guid("60ea16e3-c435-48b2-8061-ad31c8bfb660"),
                            CategoryId = new Guid("24f612d4-366f-4e5b-82ca-4ecf8c32441c"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507512/beqaltk/pro/l6mwbrlfdkd9jdnnptt4.jpg",
                            Name = "Yoghurt",
                            NumberOfRatings = 0,
                            Price = 25.0,
                            Rating = 0,
                            Weight = "900 G"
                        },
                        new
                        {
                            Id = new Guid("088c21e1-7993-4210-8995-346acb51a641"),
                            CategoryId = new Guid("f4b80fb3-6482-4d08-9044-2fd31bc9e5ae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507539/beqaltk/pro/ij4uxxd7ppq7t7p5wfck.png",
                            Name = "Chicken",
                            NumberOfRatings = 0,
                            Price = 250.0,
                            Rating = 0,
                            Weight = "1 K"
                        },
                        new
                        {
                            Id = new Guid("9fede6ad-03f7-419b-b7db-9bbc43d51e74"),
                            CategoryId = new Guid("f4b80fb3-6482-4d08-9044-2fd31bc9e5ae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507497/beqaltk/pro/e65khctoutmakfu7aynz.jpg",
                            Name = "Mutton",
                            NumberOfRatings = 0,
                            Price = 320.0,
                            Rating = 0,
                            Weight = "1 K"
                        },
                        new
                        {
                            Id = new Guid("6e596730-14e9-43a7-8f6b-614e4bd1f93b"),
                            CategoryId = new Guid("f4b80fb3-6482-4d08-9044-2fd31bc9e5ae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507525/beqaltk/pro/saa2zhgvwkndrmb2upjs.jpg",
                            Name = "Fish",
                            NumberOfRatings = 0,
                            Price = 80.0,
                            Rating = 0,
                            Weight = "1 K"
                        },
                        new
                        {
                            Id = new Guid("c1a8954e-09df-4355-a05b-4bdbb7634396"),
                            CategoryId = new Guid("f4b80fb3-6482-4d08-9044-2fd31bc9e5ae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507505/beqaltk/pro/ncqw3kpjbeeux9qyju2v.jpg",
                            Name = "Crab",
                            NumberOfRatings = 0,
                            Price = 400.0,
                            Rating = 0,
                            Weight = "1 K"
                        },
                        new
                        {
                            Id = new Guid("3fb7253d-579a-4fcd-9179-b84566f1ff1d"),
                            CategoryId = new Guid("f4b80fb3-6482-4d08-9044-2fd31bc9e5ae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507522/beqaltk/pro/kvfs7h1nim12xxbo57j4.jpg",
                            Name = "Prawn",
                            NumberOfRatings = 0,
                            Price = 460.0,
                            Rating = 0,
                            Weight = "1 K"
                        },
                        new
                        {
                            Id = new Guid("85fe3b27-3f39-48b7-b2e8-5ce9957d558a"),
                            CategoryId = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507518/beqaltk/pro/i0pucbshvt86cmhpocoh.jpg",
                            Name = "Sprite",
                            NumberOfRatings = 0,
                            Price = 15.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("3de01125-5e4a-4efa-914e-07992e25d295"),
                            CategoryId = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507504/beqaltk/pro/l4atfmtpvey2uc9povfq.jpg",
                            Name = "Coca Cola",
                            NumberOfRatings = 0,
                            Price = 15.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("4cd0f5b5-c9b8-44d1-babd-acc8ea113069"),
                            CategoryId = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507505/beqaltk/pro/xuwrzjfhnygxqbqiwwbp.jpg",
                            Name = "Red Bull",
                            NumberOfRatings = 0,
                            Price = 35.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("a2a29ad0-0c1b-4ff6-8246-3f84bdd7dd15"),
                            CategoryId = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507522/beqaltk/pro/evomyd5cxh1vstahb5uj.jpg",
                            Name = "Minut Maid",
                            NumberOfRatings = 0,
                            Price = 10.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("3fb83435-22c2-48fd-a502-c79558ad487c"),
                            CategoryId = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507499/beqaltk/pro/rqjruxgbzee889zk0atr.jpg",
                            Name = "Mountain Dew",
                            NumberOfRatings = 0,
                            Price = 25.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("2b6dbceb-05e0-4036-b0e0-0dc05c4569c5"),
                            CategoryId = new Guid("bde57096-18b4-418e-a121-0d41c689b596"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507513/beqaltk/pro/r4318mhgqdg0iky6lu6a.jpg",
                            Name = "Chocolate Ice Cream",
                            NumberOfRatings = 0,
                            Price = 80.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("e8fd8dee-ec27-4cbe-bb63-beb523c9baf9"),
                            CategoryId = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507524/beqaltk/pro/wbsvxkmmr2ivpis7pbzg.jpg",
                            Name = "Vim",
                            NumberOfRatings = 0,
                            Price = 40.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("1526acab-abfc-4d8e-a9fd-c06de938ad78"),
                            CategoryId = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507503/beqaltk/pro/pgojlz9nildchmiqiqga.png",
                            Name = "Colgate",
                            NumberOfRatings = 0,
                            Price = 50.0,
                            Rating = 0,
                            Weight = "250 G"
                        },
                        new
                        {
                            Id = new Guid("b6f01fd0-06e7-477b-961c-f78cb7350451"),
                            CategoryId = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507527/beqaltk/pro/huut3e3l4seyhhi0gwox.png",
                            Name = "Medimix",
                            NumberOfRatings = 0,
                            Price = 25.0,
                            Rating = 0,
                            Weight = "150 G"
                        },
                        new
                        {
                            Id = new Guid("38631798-ebb8-4208-a0a2-e64672771633"),
                            CategoryId = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507510/beqaltk/pro/drktdwe5ebqtuddiikey.png",
                            Name = "Harpic",
                            NumberOfRatings = 0,
                            Price = 40.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("7c351659-0c0a-418b-8893-b720b1a33ce1"),
                            CategoryId = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507501/beqaltk/pro/uwdpuzzk1ulhdqqo6vs3.png",
                            Name = "Dettol",
                            NumberOfRatings = 0,
                            Price = 70.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("d917d9d2-bb17-4f8f-837c-7c9d3ed962c0"),
                            CategoryId = new Guid("afd07098-09a2-4e7a-abe2-72716032bb71"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507512/beqaltk/pro/xvdn7kai1lfsifguw162.jpg",
                            Name = "Tide",
                            NumberOfRatings = 0,
                            Price = 40.0,
                            Rating = 0,
                            Weight = "250 ML"
                        },
                        new
                        {
                            Id = new Guid("b22c9dfd-76ce-474f-8bd1-00444a8f3208"),
                            CategoryId = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507504/beqaltk/pro/si0jflwu52yylsb2kffi.jpg",
                            Name = "Parle-G",
                            NumberOfRatings = 0,
                            Price = 5.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("5e674efc-1946-48e1-bd4f-8dc46970a02b"),
                            CategoryId = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507515/beqaltk/pro/g3jzrvift0irckx5efpa.jpg",
                            Name = "Dairy Milk",
                            NumberOfRatings = 0,
                            Price = 20.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("6ca58511-c7b4-4f6a-82fd-aa6a1f221156"),
                            CategoryId = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507521/beqaltk/pro/we1gewq1rcc4tmcypqmf.png",
                            Name = "Pringles",
                            NumberOfRatings = 0,
                            Price = 10.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("badf7ebc-05ec-4724-9867-e2550cd40f54"),
                            CategoryId = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507517/beqaltk/pro/l9hunwcakflpkgyob0zg.jpg",
                            Name = "Oreo",
                            NumberOfRatings = 0,
                            Price = 10.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("cc97c187-b113-4fa4-845c-dbdc04a176cb"),
                            CategoryId = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507515/beqaltk/pro/npy39v0n8bmjxxxefhq0.png",
                            Name = "Lays",
                            NumberOfRatings = 0,
                            Price = 5.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("2af2f2ea-99f0-4b52-95df-4a6ec46bb6ed"),
                            CategoryId = new Guid("e3cbd32f-9df5-407e-9c16-2879384b9249"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507521/beqaltk/pro/jpelj7a1ph2p37vujqn1.jpg",
                            Name = "Perk",
                            NumberOfRatings = 0,
                            Price = 5.0,
                            Rating = 0,
                            Weight = "100 G"
                        },
                        new
                        {
                            Id = new Guid("41966dd6-a187-4ed9-ba21-9887029d8b50"),
                            CategoryId = new Guid("a1be8b20-1226-4833-bb59-40cb6490f785"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507517/beqaltk/pro/gvv6xdowiiy0d6y0yu8d.png",
                            Name = "India Gate",
                            NumberOfRatings = 0,
                            Price = 28.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("13c12c33-5ee1-42c7-9aec-e07e770b3835"),
                            CategoryId = new Guid("a1be8b20-1226-4833-bb59-40cb6490f785"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507516/beqaltk/pro/fpgv3prfg700kkjofcrb.png",
                            Name = "Atta",
                            NumberOfRatings = 0,
                            Price = 20.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("f41e550e-af42-4f9e-8fdd-2672a2623086"),
                            CategoryId = new Guid("87b5e568-4339-4c24-bb91-f315043783da"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507517/beqaltk/pro/hjdhgwtyij5jcxb6yqjb.jpg",
                            Name = "Masala",
                            NumberOfRatings = 0,
                            Price = 80.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("e64f830e-0849-4094-8e58-b151e6117430"),
                            CategoryId = new Guid("87b5e568-4339-4c24-bb91-f315043783da"),
                            ImgUrl = "https://res.cloudinary.com/dbsxwhtst/image/upload/v1721213499/GroceryAPI/Products/frozen/elwxsm6e8nkkjy8rr9bu.jpg",
                            Name = "Frozen Beans",
                            NumberOfRatings = 0,
                            Price = 30.0,
                            Rating = 0,
                            Weight = "1 KG"
                        },
                        new
                        {
                            Id = new Guid("ff14104f-b074-434f-86d3-2d218dcc7c71"),
                            CategoryId = new Guid("c3e2e423-2612-4f07-9822-826016e78fae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507519/beqaltk/pro/qhwcsdx1lnyrdlfnl3hc.jpg",
                            Name = "Tata Tea",
                            NumberOfRatings = 0,
                            Price = 42.0,
                            Rating = 0,
                            Weight = "250 G"
                        },
                        new
                        {
                            Id = new Guid("f5961533-c3f1-463d-900b-d5c0e74cc2cd"),
                            CategoryId = new Guid("c3e2e423-2612-4f07-9822-826016e78fae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507502/beqaltk/pro/ttdspcldqguaqyy9kc6j.jpg",
                            Name = "Bru Coffee",
                            NumberOfRatings = 0,
                            Price = 60.0,
                            Rating = 0,
                            Weight = "250 G"
                        },
                        new
                        {
                            Id = new Guid("dd3d7e28-8678-48c9-8077-6067985d7411"),
                            CategoryId = new Guid("c3e2e423-2612-4f07-9822-826016e78fae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507516/beqaltk/pro/fvvcji66a4bmmxizzohi.jpg",
                            Name = "Sunrise Coffee",
                            NumberOfRatings = 0,
                            Price = 30.0,
                            Rating = 0,
                            Weight = "250 G"
                        },
                        new
                        {
                            Id = new Guid("5b8d604d-7329-4be0-bd74-567f47a5406f"),
                            CategoryId = new Guid("c3e2e423-2612-4f07-9822-826016e78fae"),
                            ImgUrl = "https://res.cloudinary.com/dokp2svd4/image/upload/v1723507527/beqaltk/pro/a5co9dsi27lrxhyilrpd.jpg",
                            Name = "Taj Mahal Tea",
                            NumberOfRatings = 0,
                            Price = 40.0,
                            Rating = 0,
                            Weight = "250 G"
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReviewRating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.Cart", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationUser", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Core.Domain.Entities.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Domain.Entities.CartItem", b =>
                {
                    b.HasOne("Core.Domain.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Domain.Entities.FavouritesList", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationUser", "User")
                        .WithOne("FavouritesList")
                        .HasForeignKey("Core.Domain.Entities.FavouritesList", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Domain.Entities.FavouritesListItem", b =>
                {
                    b.HasOne("Core.Domain.Entities.FavouritesList", "FavouritesList")
                        .WithMany("FavouritesListItems")
                        .HasForeignKey("FavouritesListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavouritesList");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Domain.Entities.Order", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Core.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Domain.Entities.Product", b =>
                {
                    b.HasOne("Core.Domain.Entities.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Domain.Entities.Review", b =>
                {
                    b.HasOne("Core.Domain.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Core.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("FavouritesList");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Core.Domain.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Core.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Domain.Entities.FavouritesList", b =>
                {
                    b.Navigation("FavouritesListItems");
                });

            modelBuilder.Entity("Core.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
